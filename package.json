{
  "name": "ck3tiger-for-vscode",
  "displayName": "ck3tiger for VS Code",
  "description": "Integrates ck3tiger logs with Visual Studio Code",
  "version": "1.0.2",
  "engines": {
    "vscode": "^1.93.0"
  },
  "publisher": "unlomtrois",
  "author": {
    "name": "Vadim Kuznetsov",
    "url": "https://github.com/unLomTrois"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/unLomTrois/ck3tiger-for-vscode-2"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "paradox",
    "ck3",
    "crusader kings 3",
    "ck3tiger",
    "pdxscript"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:ck3"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ck3tiger-for-vscode.runCk3tiger",
        "title": "ck3tiger: Run ck3tiger"
      },
      {
        "command": "ck3tiger-for-vscode.updateCk3tiger",
        "title": "ck3tiger: Update ck3tiger"
      },
      {
        "command": "ck3tiger-for-vscode.resetPaths",
        "title": "ck3tiger: Reset Paths"
      },
      {
        "command": "ck3tiger-for-vscode.getProblemsFromLog",
        "title": "ck3tiger: Get problems from the log file (without running ck3tiger)"
      }
    ],
    "configuration": {
      "title": "ck3tiger configuration",
      "properties": {
        "ck3tiger.tigerPath": {
          "scope": "application",
          "type": "string",
          "markdownDescription": "Specifies location of your ck3tiger instance"
        },
        "ck3tiger.ck3Path": {
          "scope": "application",
          "type": "string",
          "description": "The location of a vanilla CK3 installation (like \"C:/Program Files (x86)/Steam/steamapps/common/Crusader Kings III/game\""
        },
        "ck3tiger.modPath": {
          "scope": "application",
          "type": "string",
          "description": "The location of your .mod file (like \"Like Documents/Paradox Interactive/Crusader Kings III/mod/<.mod file>\""
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.8",
    "@types/node": "20.x",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.24.0",
    "eslint": "^9.11.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  }
}